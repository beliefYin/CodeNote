Requests库

www.python-requests.org

安装方法
pip install requests

Requests库的7个主要方法
requests.request() #构造一个请求，支撑以下各方法的基础方法
requests.get() #获取HTML网页的主要方法，对应于HTTP的GET
requests.head() #获取HTML网页头信息的方法，对应于HTTP的HEAD
requests.post() #向HTML网页提交POST请求的方法，对应于HTTP的POST
requests.put() #向HTML网页提交PUT请求的方法，对应于HTTP的PUT
requests.patch() #向HTML网页提交局部修改请求，对应于HTTP的PATCH
requests.delete() #向HTML网页提交删除请求，对应于HTTP的DELETE

HTTP协议对资源的操作
GET 请求获取URL位置的资源
HEAD 请求获取URL位置资源的响应消息报告，即获取该资源的头部信息
POST 请求向URL位置的资源后附加新的数据
PUT 请求向URL位置存储一个资源，覆盖原URL位置的资源
PATCH 请求局部更新URL位置的资源，即改变该处资源的部分内容
DELETE 请求删除URL位置存储的资源

get请求
requests.get(url, params=None, **kwargs)

import requests
r = requests.get("http://www.baidu.com") #r是一个Response对象

r.status_code #HTTP请求的返回状态，code是200表示请求成功
r.text #HTTP响应内容的字符串形式，即url对应的页面内容
r.encode #从HTTPheader中猜测的响应内容编码方式
r.apparent_encoding #备选编码方式  通过分析页面内容猜测的编码方式
r.context #HTTP响应内容的二进制形式

异常
requests.ConnectionError 网络连接错误异常，如DNS查询失败、拒接访问等
requests.HTTPError HTTP错误异常
requests.URLRequired URL缺失异常
requests.TooManyRedirects 超过最大重定向次数，产生重定向异常
requests.ConnectTimeout 连接远程服务器超时异常
requests.Timeout 请求URL超时，产生超时异常

r.raise_for_status() 如果不是200，产生异常requests.HTTPError

